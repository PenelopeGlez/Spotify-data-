# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

--Which artists have the most popular tracks (based on popularity)?

--What are the most danceable songs and how their energy compares to their danceability? 

--Is there a correlation between track energy and popularity? 

--Which tracks have the highest liveness and what is their popularity?

--What are the top 5 artists with the highest average popularity, and what are teh most popular tracks for each artists?

--What is the relationship between the durationn of a track and its popularity? Does a longer duration tend to correlate with higher popularity?

--What makes a track popular?
To explore what makes a track popular, we would examine the correlation between popularity and other features like energy, danceability and acousticness. This can be achieved by calculating avgs for this features and comparing them against the popularity score.

--Which artists consistently produce popular tracks?

--How do popular tracks differ over time?
You can analize the data over time(if there's a release_date field or similar) to check for trends in tempo, energy or other features.



