# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

--Which artists have the most popular tracks (based on popularity)?
SELECT artist_name,COUNT(*) AS number_of_tracks, AVG(popularity) AS average_popularity
FROM Spotifydata
GROUP BY artist_name
LIMIT 10;

--What are the most danceable songs and how their energy compares to their danceability? 
SELECT track_name, artist_name, danceability, energy 
FROM Spotifydata
ORDER BY danceability DESC, energy DESC
LIMIT 10;

--Which tracks have the highest liveness and what is their popularity?
SELECT track_name, artist_name, liveness, popularity
FROM Spotifydata
ORDER BY liveness DESC, popularity DESC
LIMIT 10;

--What are the top 5 artists with the highest average popularity, and what are teh most popular tracks for each artists?
WITH ArtistAveragePopularity AS (
    SELECT artist_name, AVG(popularity) AS avg_popularity
    FROM Spotifydata
    GROUP BY artist_name
    ORDER BY avg_popularity DESC
    LIMIT 5
)
SELECT s.artist_name, s.track_name, s.popularity, a.avg_popularity
FROM Spotifydata s
JOIN ArtistAveragePopularity a ON s.artist_name = a.artist_name
WHERE s.popularity = (
    SELECT MAX(popularity)
    FROM Spotifydata
    WHERE artist_name = s.artist_name
)
ORDER BY a.avg_popularity DESC, s.popularity DESC;

--Which artists consistently produce popular tracks?
SELECT artist_name, COUNT(track_name) AS total_tracks, AVG(popularity) AS avg_popularity
FROM Spotifydata
GROUP BY artist_name
HAVING AVG(popularity) >= 80
ORDER BY avg_popularity DESC, total_tracks DESC;




